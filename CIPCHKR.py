"""

CIP Analyzer		Arjun Muraleedharan			24-01-2019
The program processes the output files generated by the CIPCHK utility. It logs all activities of the present operation
to a lod file and appends the data collected to another file.

Bellow is how it works:
1. Checks all the files in INPUT directory
2. Reads each lines from all the files
3. Writes the data to OUTPUT directory

Changes:
25-01-2019  :   Added ClearDir() to clean up OUTPUT folder after processing
                Changed input file to CIPITM.DAT

"""

import datetime
import os
import getpass

# Initializing variables
Now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
NumberOfitems = 0
StoreCount = 0
username = getpass.getuser()


# Functions defined below

# Ensure all directories are in place and create missing ones
def DirCheck():
    ActivityLog.write("Checking if directory structure looks all right\n")
    try:
        Result = os.path.isdir("c:/cip")
        if Result == False:
            print("CIP directory is missing")
            DirFix("CIP")

        Result = os.path.isdir("c:/cip/input")
        if Result == True:
            if not os.listdir("c:/cip/input"):
                print("Directory is empty")
        else:
            print("Input directory is missing")
            DirFix("Input")

        Result = os.path.isdir("c:/cip/Log")
        if Result == False:
            DirFix("Log")

        Result = os.path.isdir("c:/cip/OUTPUT")
        if Result == True:
            if len(os.listdir("C:/CIP/OUTPUT/")) == 0:
                OnError("No Logs to analyze ")
        else:
            DirFix("OUTPUT")
    except Exception as e:
        ActivityLog.write(e)


# Handle missing directories
def DirFix(Name):
    ActivityLog.write("Creating missing directories\n")

    if (Name == "cip"):
        os.makedirs("C:/CIP")
    elif (Name == "Input"):
        os.makedirs("C:/CIP/INPUT")
    elif (Name == "OUTPUT"):
        os.makedirs("C:/CIP/OUTPUT")
    elif (Name == "Log"):
        os.makedirs("C:/CIP/LOG")
    else:
        ActivityLog.write("Invalid directory is passed\n")


# Get total number of items count
def GetItemCount():
    global NumberOfitems
    with open("c:/CIP/INPUT/CIPITM.DAT", encoding="Latin-1") as f:
        for line in f:
            NumberOfitems = NumberOfitems + 1

# Error Handling Logs
def OnError(Message):
    ActivityLog.write(Message + Now + '\n')
    quit()


# Read all files in OUTPUT
def ProcessFiles():
    try:
        Filepath = "c:/CIP/OUTPUT/"
        global StoreCount
        for file in os.listdir(Filepath):
            StoreCount = StoreCount + 1
            Fullpath = Filepath + file
            with open(Fullpath, encoding="Latin-1") as f:
                for line in f:
                    MasterLog.write(file +"," + Now.split(" ")[0] + "," + line)
        ActivityLog.write("Processed " + str(NumberOfitems)\
                          + " items in " + str(StoreCount)\
                          + " stores on " + Now.split(" ")[0] + "\n")
    except Exception as e:
        ActivityLog.write(str(e))

# Function to delete the log files after processing
def ClearDir():
    for file in os.listdir("c:/CIP/OUTPUT/"):
        os.remove("c:/cip/output/" + file)
    ActivityLog.write("Cleaned Up OUTPUT\n")


# Mainline code starts from here
MasterLog = open("C:/CIP/LOG/MasterLog.txt", "a")
ActivityLog = open("C:/CIP/LOG/Log.txt", "w+")
ActivityLog.write("Initializing CIPAnalyzer by " + username + "\n")
DirCheck()
GetItemCount()
ProcessFiles()
ClearDir()

ActivityLog.write("Completed Successfully\n")
